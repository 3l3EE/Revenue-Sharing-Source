// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ContractFunded extends ethereum.Event {
  get params(): ContractFunded__Params {
    return new ContractFunded__Params(this);
  }
}

export class ContractFunded__Params {
  _event: ContractFunded;

  constructor(event: ContractFunded) {
    this._event = event;
  }

  get funder(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FundsSentToRevenueSharing extends ethereum.Event {
  get params(): FundsSentToRevenueSharing__Params {
    return new FundsSentToRevenueSharing__Params(this);
  }
}

export class FundsSentToRevenueSharing__Params {
  _event: FundsSentToRevenueSharing;

  constructor(event: FundsSentToRevenueSharing) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Storage extends ethereum.SmartContract {
  static bind(address: Address): Storage {
    return new Storage("Storage", address);
  }

  controller(): Address {
    let result = super.call("controller", "controller():(address)", []);

    return result[0].toAddress();
  }

  try_controller(): ethereum.CallResult<Address> {
    let result = super.tryCall("controller", "controller():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  revenueSharingContract(): Address {
    let result = super.call(
      "revenueSharingContract",
      "revenueSharingContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_revenueSharingContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "revenueSharingContract",
      "revenueSharingContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  threshold(): BigInt {
    let result = super.call("threshold", "threshold():(uint256)", []);

    return result[0].toBigInt();
  }

  try_threshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("threshold", "threshold():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  usdc(): Address {
    let result = super.call("usdc", "usdc():(address)", []);

    return result[0].toAddress();
  }

  try_usdc(): ethereum.CallResult<Address> {
    let result = super.tryCall("usdc", "usdc():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class FundContractCall extends ethereum.Call {
  get inputs(): FundContractCall__Inputs {
    return new FundContractCall__Inputs(this);
  }

  get outputs(): FundContractCall__Outputs {
    return new FundContractCall__Outputs(this);
  }
}

export class FundContractCall__Inputs {
  _call: FundContractCall;

  constructor(call: FundContractCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FundContractCall__Outputs {
  _call: FundContractCall;

  constructor(call: FundContractCall) {
    this._call = call;
  }
}

export class InitializeControllerCall extends ethereum.Call {
  get inputs(): InitializeControllerCall__Inputs {
    return new InitializeControllerCall__Inputs(this);
  }

  get outputs(): InitializeControllerCall__Outputs {
    return new InitializeControllerCall__Outputs(this);
  }
}

export class InitializeControllerCall__Inputs {
  _call: InitializeControllerCall;

  constructor(call: InitializeControllerCall) {
    this._call = call;
  }

  get _controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeControllerCall__Outputs {
  _call: InitializeControllerCall;

  constructor(call: InitializeControllerCall) {
    this._call = call;
  }
}

export class SetContractsCall extends ethereum.Call {
  get inputs(): SetContractsCall__Inputs {
    return new SetContractsCall__Inputs(this);
  }

  get outputs(): SetContractsCall__Outputs {
    return new SetContractsCall__Outputs(this);
  }
}

export class SetContractsCall__Inputs {
  _call: SetContractsCall;

  constructor(call: SetContractsCall) {
    this._call = call;
  }

  get _revenueSharingContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _usdc(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetContractsCall__Outputs {
  _call: SetContractsCall;

  constructor(call: SetContractsCall) {
    this._call = call;
  }
}

export class SetThresholdCall extends ethereum.Call {
  get inputs(): SetThresholdCall__Inputs {
    return new SetThresholdCall__Inputs(this);
  }

  get outputs(): SetThresholdCall__Outputs {
    return new SetThresholdCall__Outputs(this);
  }
}

export class SetThresholdCall__Inputs {
  _call: SetThresholdCall;

  constructor(call: SetThresholdCall) {
    this._call = call;
  }

  get newThreshold(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetThresholdCall__Outputs {
  _call: SetThresholdCall;

  constructor(call: SetThresholdCall) {
    this._call = call;
  }
}
